package commands;
import database.CompositionBD;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.*;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.paint.LinearGradient;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.stage.FileChooser;
import mainPackage.Menu;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import java.io.File;
import java.util.Objects;

public class AddCompos implements Command {
    private static final Logger logger = LogManager.getLogger(AddCompos.class);
    private static final Logger errorLogger = LogManager.getLogger("ErrorLogger");

    public TextField nameField = new TextField();
    public TextField styleField = new TextField();
    public TextField authorField = new TextField();
    public TextField durationField = new TextField();
    public TextField audioPathField = new TextField();
    public TextArea lyricsArea = new TextArea();

    @Override
    public void execute() {
        Menu.getPrimaryStage().getScene().setRoot(createLayout());
    }

    @Override
    public String printInfo() {
        return "Add a new composition.";
    }

    protected File showAudioFileDialog() {
        FileChooser fileChooser = new FileChooser();
        fileChooser.setTitle("–í–∏–±–µ—Ä—ñ—Ç—å –∞—É–¥—ñ–æ—Ñ–∞–π–ª");
        fileChooser.getExtensionFilters().add(new FileChooser.ExtensionFilter("–ê—É–¥—ñ–æ—Ñ–∞–π–ª–∏", "*.mp3", "*.wav"));
        return fileChooser.showOpenDialog(Menu.getPrimaryStage());
    }

    public BorderPane createLayout() {
        Label title = new Label("–î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É –∫–æ–º–ø–æ–∑–∏—Ü—ñ—é");
        title.setFont(Font.font("Arial", FontWeight.BOLD, 26));
        title.setTextFill(Color.WHITE);

        ImageView icon = new ImageView(
                new Image(Objects.requireNonNull(getClass().getResource("/music.png")).toExternalForm())
        );
        icon.setFitWidth(70);
        icon.setFitHeight(70);

        HBox titleBox = new HBox(10, icon, title);
        titleBox.setAlignment(Pos.CENTER);

        nameField.setPromptText("–ù–∞–∑–≤–∞ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—ó");
        authorField.setPromptText("–Ü–º‚Äô—è –∞–≤—Ç–æ—Ä–∞");
        styleField.setPromptText("–°—Ç–∏–ª—å –∫–æ–º–ø–æ–∑–∏—Ü—ñ—ó");
        durationField.setPromptText("–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å (—É —Å–µ–∫—É–Ω–¥–∞—Ö)");

        lyricsArea.setPromptText("–¢–µ–∫—Å—Ç –ø—ñ—Å–Ω—ñ");
        lyricsArea.setWrapText(true);
        lyricsArea.setPrefRowCount(4);

        audioPathField.setPromptText("–®–ª—è—Ö –¥–æ –∞—É–¥—ñ–æ—Ñ–∞–π–ª—É");
        audioPathField.setEditable(false);

        Button browseButton = new Button("üéµ –í–∏–±—Ä–∞—Ç–∏ –∞—É–¥—ñ–æ");
        browseButton.setOnAction(e -> {
            File file = showAudioFileDialog();
            if (file != null) {
                audioPathField.setText(file.toURI().toString());
            }
        });

        HBox audioBox = new HBox(10, audioPathField, browseButton);
        audioBox.setAlignment(Pos.CENTER);

        Button submitButton = new Button("–î–æ–¥–∞—Ç–∏ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—é");
        submitButton.setStyle("-fx-background-radius: 15; -fx-font-size: 14px; -fx-background-color: #ffffff; -fx-text-fill: #800080;");
        submitButton.setPrefWidth(200);
        submitButton.setPrefHeight(40);

        submitButton.setOnAction(e -> {
            try {
                String name = nameField.getText().trim();
                String style = styleField.getText().trim();
                String author = authorField.getText().trim();
                String durationStr = durationField.getText().trim();
                String lyrics = lyricsArea.getText().trim();
                String audioPath = audioPathField.getText().trim();

                if (name.isEmpty() || style.isEmpty() || author.isEmpty() || durationStr.isEmpty() || audioPath.isEmpty()) {
                    showAlert("–£—Å—ñ –ø–æ–ª—è –º–∞—é—Ç—å –±—É—Ç–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ.");
                    return;
                }

                int duration = Integer.parseInt(durationStr);
                if (duration <= 0) {
                    showAlert("–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –º–∞—î –±—É—Ç–∏ –¥–æ–¥–∞—Ç–Ω—ñ–º —á–∏—Å–ª–æ–º.");
                    return;
                }

                int newId = CompositionBD.insertComposition(name, style, duration, author, lyrics, audioPath);

                if (newId != -1) {
                    logger.info("–ö–æ–º–ø–æ–∑–∏—Ü—ñ—é '{}' —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ –∑ ID {}", name, newId);
                    showAlert("–ö–æ–º–ø–æ–∑–∏—Ü—ñ—é —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!");
                } else {
                    showAlert("–ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—é.");
                }
            } catch (NumberFormatException ex) {
                showAlert("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ –≤ –ø–æ–ª—ñ —Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ.");
                errorLogger.error("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ: {}", ex.getMessage(), ex);
            } catch (Exception ex) {
                errorLogger.error("–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–º–ø–æ–∑–∏—Ü—ñ—ó: {}", ex.getMessage(), ex);
                showAlert("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—ó.");
            }
        });

        Button backButton = new Button("‚¨Ö –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é");
        backButton.setStyle("-fx-background-radius: 15; -fx-font-size: 14px; -fx-background-color: #ffffff; -fx-text-fill: #800080;");
        backButton.setPrefWidth(200);
        backButton.setPrefHeight(40);
        backButton.setOnAction(e -> Menu.getInstance().showMainMenu());

        VBox form = new VBox(15, titleBox, nameField, authorField, styleField, durationField, lyricsArea, audioBox, submitButton, backButton);
        form.setAlignment(Pos.CENTER);
        form.setPadding(new Insets(30));
        form.setMaxWidth(500);

        BorderPane layout = new BorderPane();
        layout.setCenter(form);
        layout.setPadding(new Insets(20));
        layout.setBackground(new Background(new BackgroundFill(
                new LinearGradient(0, 1, 1, 0, true,
                        javafx.scene.paint.CycleMethod.NO_CYCLE,
                        new javafx.scene.paint.Stop(0, Color.LAVENDERBLUSH),
                        new javafx.scene.paint.Stop(1, Color.web("#916DB4"))),
                new CornerRadii(10),
                Insets.EMPTY)));

        return layout;
    }

    protected void showAlert(String msg) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle("–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è");
        alert.setHeaderText(null);
        alert.setContentText(msg);
        alert.showAndWait();
    }
}
